#!/usr/bin/env bash

set -euo pipefail
[[ -z "${DEBUG:-}" ]] || set -x

ex="external-artifacts.yaml"

jsonify() {
  local tmp_file
  tmp_file=$(mktemp)
  yaml2json <$ex >"$tmp_file"
  echo "$tmp_file"
}

_jq() {
  jq -M -c -r "$@"
}

get_artifact_field() {

  local x=$1; shift
  local y=$1; shift

  local field=$1; shift

  local json_d
  json_d="$(jsonify)"

  trap 'rm $json_d' RETURN

  _jq ".artifact_sets[$x].artifact_set|.artifacts[$y].$field" "$json_d"
}

update_artifact_field() {

  local x=$1; shift
  local y=$1; shift

  local field=$1; shift
  local value=$1; shift

  new_ex_art=$(mktemp)

  yq w $ex \
    "artifact_sets[$x].artifact_set.artifacts[$y].$field" "$value" \
    >"$new_ex_art"

  mv "$new_ex_art" $ex
}

field() { fnum=$1; shift; cat - | awk "{print \$$fnum}"; }

update_external_artifacts() {

  local artifact_set_name=$1; shift
  local artifact_name=$1; shift

  local json_d
  json_d="$(jsonify)"

  local s3_temp
  s3_temp=$(mktemp)

  trap 'rm $json_d $s3_temp' RETURN

  x=$(_jq "[(.artifact_sets[].artifact_set)|.name]|index(\"${artifact_set_name}\")" "$json_d")
  y=$(_jq "[.artifact_sets[$x].artifact_set|.artifacts[].name]|index(\"${artifact_name}\")" "$json_d")

  update_artifact_field "$x" "$y" "version" "${PIKSI_RELEASES_VERSION}"

  ## Fetch bucket prior to updating since in the SDK case the artifact we
  ##   fetch to generate a hash will may not have been copied to the final
  ##   bucket (swiftnav-releases) yet.
  bucket=$(get_artifact_field "$x" "$y" s3_bucket)

  if [[ "$artifact_set_name" == "sdk" ]] && [[ -n "${PIKSI_RELEASES_DEVEL:-}" ]]; then
    update_artifact_field "$x" "$y" "s3_bucket" "${PIKSI_RELEASES_BUCKET}"
  fi

  version=$(get_artifact_field "$x" "$y" version)
  repository=$(get_artifact_field "$x" "$y" s3_repository)
  object=$(get_artifact_field "$x" "$y" s3_object)

  aws s3 cp "s3://${bucket}/${repository}/${version}/${object}" "$s3_temp"
  digest=$(sha256sum "$s3_temp" | field 1)

  update_artifact_field "$x" "$y" "sha256" "$digest"
}

update_external_artifacts multi fpga_bitstream
update_external_artifacts multi rtos_elf

update_external_artifacts internal fpga_bitstream
update_external_artifacts internal rtos_elf

update_external_artifacts sdk fpga_bitstream
update_external_artifacts sdk rtos_elf

git add "$ex"
