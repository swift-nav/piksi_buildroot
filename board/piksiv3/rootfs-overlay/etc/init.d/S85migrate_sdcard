#!/bin/sh

name="migrate_sdcard"
log_tag=$name

source /etc/init.d/logging.sh

partition_disk()
{
  local dev="$1"; shift

  sed -e 's/\s*\([\+0-9a-zA-Z]*\).*/\1/' <<EOF | fdisk $dev
      o # clear the in memory partition table
      n # new partition
      p # primary partition
      1 # partition number 1
        # default - start at beginning of disk
        # default - use whole disk
      w # write the partition table
      q # quit
EOF
}

reload_sdcard_drivers()
{
  modprobe --remove sdhci_of_arasan sdhci_pltfm sdhci
  modprobe sdhci_of_arasan
}

format_with_f2fs()
{
  local dev="/dev/$1"; shift
  local fstype=$(lsblk -o FSTYPE $dev | tail -n -1)

  logi "Existing fs type: ${fstype}"

  local pkname=$(lsblk -o PKNAME $dev | tail -n -1)

  logi "Creating partition table on ${pkname}..."
  partition_disk /dev/$pkname

  # Force the kernel to re-read the partition table
  blockdev --rereadpt /dev/$pkname

  logi "Formatting partition with F2FS..."
  mkfs -t f2fs $dev || logw "Formatting failed"
}

needs_migration()
{
  local devname=$1; shift

  if ! grep -q "logging_file_system=F2FS" /persistent/config.ini; then
    logd "Did not detect F2FS in config"
    return 1
  fi

  if detect_f2fs $devname; then
    return 1
  fi

  return 0
}

detect_f2fs()
{
  local devname=$1; shift

  local dev="/dev/$devname"
  local fstype=$(lsblk $dev -o FSTYPE | tail -n -1)

  logd "detect_f2fs: file-system type: '$fstype'"

  if [[ "$fstype" == "f2fs" ]]; then
    return 0
  fi

  return 1
}

list_partitions()
{
  lsblk -o NAME,TYPE | grep 'mmc' | grep ' part$' | awk '{print $1}' | tail -n -1
}

start()
{
  echo >/var/run/automount_disabled

  for dev in $(list_partitions); do
    devname=${dev:2}
    if needs_migration $devname; then
      mountpoint=$(lsblk -o MOUNTPOINT /dev/$devname | tail -n -1)
      [[ -z "$mountpoint" ]] || umount $mountpoint
      logw "Migrating '${devname}' to F2FS..."
      format_with_f2fs $devname
    fi
  done

  rm /var/run/automount_disabled
  reload_sdcard_drivers
}

stop()
{
  :
}

source /etc/init.d/template_command.inc.sh
