diff --git a/drivers/tty/serial/xilinx_uartps.c b/drivers/tty/serial/xilinx_uartps.c
index a2393431a85e..206253ceda68 100644
--- a/drivers/tty/serial/xilinx_uartps.c
+++ b/drivers/tty/serial/xilinx_uartps.c
@@ -50,6 +50,11 @@ static int rx_timeout = 10;
 module_param(rx_timeout, uint, 0444);
 MODULE_PARM_DESC(rx_timeout, "Rx timeout, 1-255");
 
+/* RTS Trigger level */
+static int rts_trigger_level = 60;
+module_param(rts_trigger_level, uint, S_IRUGO);
+MODULE_PARM_DESC(rts_trigger_level, "RTS trigger level, 4-63 bytes");
+
 /* Register offsets for the UART. */
 #define CDNS_UART_CR		0x00  /* Control Register */
 #define CDNS_UART_MR		0x04  /* Mode Register */
@@ -680,19 +685,10 @@ static void cdns_uart_set_termios(struct uart_port *port,
 	unsigned int cval = 0;
 	unsigned int baud, minbaud, maxbaud;
 	unsigned long flags;
-	unsigned int ctrl_reg, mode_reg;
+	unsigned int ctrl_reg, mode_reg, modem_ctrl_reg;
 
 	spin_lock_irqsave(&port->lock, flags);
 
-	/* Wait for the transmit FIFO to empty before making changes */
-	if (!(readl(port->membase + CDNS_UART_CR) &
-				CDNS_UART_CR_TX_DIS)) {
-		while (!(readl(port->membase + CDNS_UART_SR) &
-				CDNS_UART_SR_TXEMPTY)) {
-			cpu_relax();
-		}
-	}
-
 	/* Disable the TX and RX to set baud rate */
 	ctrl_reg = readl(port->membase + CDNS_UART_CR);
 	ctrl_reg |= CDNS_UART_CR_TX_DIS | CDNS_UART_CR_RX_DIS;
@@ -770,6 +766,16 @@ static void cdns_uart_set_termios(struct uart_port *port,
 		break;
 	}
 
+	/* Configure flow control */
+	modem_ctrl_reg = readl(port->membase + CDNS_UART_MODEMCR);
+	if (termios->c_cflag & CRTSCTS) {
+		modem_ctrl_reg |= CDNS_UART_MODEMCR_FCM;
+	} else {
+		modem_ctrl_reg &= ~CDNS_UART_MODEMCR_FCM;
+	}
+	writel(rts_trigger_level, port->membase + CDNS_UART_FLOWDEL);
+	writel(modem_ctrl_reg, port->membase + CDNS_UART_MODEMCR);
+
 	/* Handling Parity and Stop Bits length */
 	if (termios->c_cflag & CSTOPB)
 		cval |= CDNS_UART_MR_STOPMODE_2_BIT; /* 2 STOP bits */
